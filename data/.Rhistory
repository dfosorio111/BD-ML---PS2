#Establecer directorios
#Daniel
setwd("C:/Users/danie/OneDrive/Escritorio/Uniandes/PEG/Big Data and Machine Learning/BD-ML---PS2/data")
#Se establece semilla
set.seed(1000)
#Importar paquetes y cargar librerías
require(pacman)
p_load(tidyverse, rvest, data.table, dplyr, skimr, caret, rio,
vtable, stargazer, ggplot2, boot, MLmetrics, lfe,
tidyverse, fabricatr, stargazer, Hmisc, writexl, viridis, here)
#Importar archivos Daniel
train_hogares <- readRDS("train_hogares.Rds")
train_personas <- readRDS("train_personas.Rds")
test_hogares <- readRDS("test_hogares.Rds")
test_personas <- readRDS("test_personas.Rds")
#Base para clasificación hogares
train_h <- train_hogares[names(test_hogares)]
train_h$Pobre <- train_hogares$Pobre
train_p <- train_personas[names(test_personas)]
#Creación de variables de nivel hogar en base personas
#Número de mujeres por hogar
train_p <- train_p%>%mutate(mujer = P6020 - 1)
train_p_num_muj <- train_p%>%group_by(id)%>%summarise(num_mujeres = sum(mujer))
#Jefe de hogar es mujer?
train_p <- train_p%>%mutate(jefe_y_mujer = ifelse(mujer == 1 & P6050 == 1, 1, 0))
train_p_jef_muj <- train_p%>%group_by(id)%>%summarise(jefe_mujer = sum(jefe_y_mujer))
#Edad jefe del hogar
train_p_edadjefe <- train_p%>%subset(P6050==1)%>%select(id, P6040)
#Jefe del hogar cotiza a seguridad social
train_p_jefecotiza <- train_p%>%subset(P6050==1)%>%select(id, P6090)%>%mutate(jefe_cotiza=ifelse(is.na(P6090),9,P6090))
train_p_adulto_maxlev_edu <-train_p%>%subset(is.na(P6210)==FALSE)%>%group_by(id)%>%summarise(max_edu_lev_h = max(P6210))
#oficio del jefe del hogar
#NA 47584
train_p_jefeofi <- train_p%>%subset(P6050==1)%>%select(id, Oficio)
#relación laboral:P6430
#
train_p_jef_ocu <- train_p%>%subset(P6050==1)%>%mutate(relab_jefe= ifelse(is.na(Oc), ifelse(is.na(Des), 11, 10) , P6430) )  #ifelse(Des==1,10,11)
#relación laboral:P6430
#
train_p_jef_ocu <- train_p%>%subset(P6050==1)%>%mutate(relab_jefe= ifelse(is.na(Oc), ifelse(is.na(Des), 11, 10) , P6430) )  #ifelse(Des==1,10,11)
#Merge de personas y hogares
lista <- c("train_p_num_muj", "train_p_jef_muj", "train_p_edadjefe", "train_p_jefecotiza", "train_p_jef_ocu")
View(lista)
train_completa <- train_h
#Merge de personas y hogares
lista <- c(train_p_num_muj, train_p_jef_muj, train_p_edadjefe, train_p_jefecotiza, train_p_jef_ocu)
View(lista)
train_completa <- train_h
for (i in lista) {
train_completa <- full_join(train_completa, i)
}
lista[i]
lista[1]
lista[[1]]
#Merge de personas y hogares
lista <- c(train_p_num_muj, train_p_jef_muj, train_p_edadjefe, train_p_jefecotiza, train_p_jef_ocu)
View(lista)
train_completa <- train_h
#Merge de personas y hogares
lista <- c(train_p_num_muj, train_p_jef_muj, train_p_edadjefe, train_p_jefecotiza, train_p_jef_ocu)
train_completa <- train_h
train_completa <- full_join(train_completa, train_p_num_muj)
train_completa <- full_join(train_completa, train_p_jef_muj)
train_completa <- full_join(train_completa, train_p_edadjefe)
train_completa <- full_join(train_completa, train_p_jefecotiza)
train_completa <- full_join(train_completa, train_p_jef_ocu)
train_completa <- train_h
train_completa <- full_join(train_completa, train_p_num_muj)
train_completa <- full_join(train_completa, train_p_jef_muj)
train_completa <- full_join(train_completa, train_p_edadjefe)
train_completa <- full_join(train_completa, train_p_jefecotiza)
train_p_jef_ocu
#relación laboral:P6430
#
train_p_jef_ocu <- train_p%>%subset(P6050==1)%>%mutate(relab_jefe= ifelse(is.na(Oc), ifelse(is.na(Des), 11, 10) , P6430) )%>%select(id, relab_jefe)  #ifelse(Des==1,10,11)
train_completa <- full_join(train_completa, train_p_jef_ocu)
View(train_completa)
train_p%>%subset(P6050==1)%>%count(P6585s3)
#Subsidio educativo
train_p%>%subset(P6050==1)%>%count(P6585s4)
train_p%>%subset(P6050==1)%>%count(ocu)
train_p%>%subset(P6050==1)%>%count(Ocu)
train_p%>%subset(P6050==1)%>%count(Oc)
train_p%>%subset(P6050==1)%>%count(Oc, P6585s3)
#Que variables se comparten?
names(test_personas)
train_p$P6800
#Horas totales trabajadas
train_p_horas <- train_p%>%count(P6800)
train_p%>%count(P6800)
is.na(train_p$p6800)%>%table()
is.na(train_p$P6800)%>%table()
#Horas totales trabajadas
train_p_horas <- train_p%>%subset(Oc == 1)
is.na(train_p_horas$P6800)%>%table()
#Horas totales trabajadas
train_p_horas <- train_p%>%mutate(Horas_reales = ifelse(Oc == 1, P6800, 0))%>%group_by(id)%>%summarise(Horas_Hogar = sum(Horas_reales))
train_p_horas
train_p_horas <- train_p%>%mutate(Horas_reales = ifelse(Oc == 1, P6800, 0))
train_p_horas
View(train_p_horas%>%select(id, Horas_reales))
View(train_p_horas%>%select(id, Oc, P6800, Horas_reales))
train_p_horas <- train_p%>%mutate(Horas_reales = ifelse(is.na(Oc), 0, P6800))
View(train_p_horas%>%select(id, Oc, P6800, Horas_reales))
#Horas totales trabajadas
train_p_horas <- train_p%>%mutate(Horas_reales = ifelse(is.na(Oc), 0, P6800))%>%group_by(id)%>%summarise(Horas_Hogar = sum(Horas_reales))
train_p_horas
train_p_horas_jefe <- train_p%>%mutate(Horas_reales = ifelse(is.na(Oc), 0, P6800))%>%subset(P6050==1)
train_p_horas_jefe <- train_p%>%mutate(Horas_reales = ifelse(is.na(Oc), 0, P6800))%>%subset(P6050==1)%>%select(id, Horas_reales)
train_p_horas_jefe
union_horas <- full_join(train_p_horas, train_p_horas_jefe)
View(union_horas)
train_completa <- full_join(train_completa, union_horas)
write.csv(train_completa, "train_completa.csv")
